@import 'tailwindcss';

@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: #1e3a8a; /* azul oscuro */
  }
}

@theme inline {
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@theme {
  --color-primary: #1e3a8a; /* azul principal */
  --color-secondary: #3b82f6; /* azul claro */
  --color-bg: #ffffff; /* blanco */
  --color-text: #1e3a8a; /* azul oscuro */
  --color-accent: #60a5fa; /* azul acento */

  --animate-shimmer: shimmer 1.5s infinite;

  --duration-enter: 210ms;
  --duration-move: 400ms;
  --duration-exit: 150ms;

  @keyframes shimmer {
    0% {
      opacity: 0;
    }
    30% {
      opacity: 1;
    }
    70% {
      opacity: 1;
    }
    100% {
      transform: translateX(150%);
      opacity: 0;
    }
  }
}

body {
  background: var(--color-bg);
  color: var(--color-text);
  font-family: var(--font-sans), sans-serif;
}

.spinner {
  background: conic-gradient(transparent 10deg, var(--color-primary), transparent 320deg);
  --border-size: 3px;
  mask-image: radial-gradient(
    closest-side,
    transparent calc(100% - var(--border-size)),
    var(--color-bg) calc(100% - var(--border-size))
  );
  opacity: 0;
  animation:
    fade 500ms 150ms forwards,
    rotate 1s linear infinite;
}

@keyframes rotate {
  to {
    transform: rotate(360deg);
  }
}

.transition-enter {
  opacity: 1;
  transform: scale(1);
  transition:
    opacity 0.5s,
    transform 0.5s;
  @starting-style {
    opacity: 0;
    transform: scale(0.95);
  }
}

@plugin "@tailwindcss/forms";
@plugin "@tailwindcss/typography";

@keyframes fade {
  from {
    filter: blur(3px);
    opacity: 0;
  }
  to {
    filter: blur(0);
    opacity: 1;
  }
}

@keyframes slide {
  from {
    translate: var(--slide-offset);
  }
  to {
    translate: 0;
  }
}

::view-transition-new(.animate-slide-from-left) {
  --slide-offset: -60px;
  animation:
    var(--duration-enter) ease-out var(--duration-exit) both fade,
    var(--duration-move) ease-in-out both slide;
}
::view-transition-old(.animate-slide-to-right) {
  --slide-offset: 60px;
  animation:
    var(--duration-exit) ease-in both fade reverse,
    var(--duration-move) ease-in-out both slide reverse;
}

::view-transition-new(.animate-slide-from-right) {
  --slide-offset: 60px;
  animation:
    var(--duration-enter) ease-out var(--duration-exit) both fade,
    var(--duration-move) ease-in-out both slide;
}

::view-transition-old(.animate-slide-to-left) {
  --slide-offset: -60px;
  animation:
    var(--duration-exit) ease-in both fade reverse,
    var(--duration-move) ease-in-out both slide reverse;
}

::view-transition-group(.animate-morph) {
  animation-duration: var(--duration-move);
}

/* 
 * Using view-transition-image-pair and not view-transition-group to preserve
 * the default animation which includes automatic position and scale morphing
 */
::view-transition-image-pair(.animate-morph) {
  animation-name: via-blur;
}

/* 
 * Blur animation for view transitions with shared elements. 
 * Fast-moving elements can be visually jarring as the eye tries
 * to track them. This creates a poor man's motion blur we can
 * use to make these transitions smoother.
 */
@keyframes via-blur {
  30% {
    filter: blur(3px);
  }
}
